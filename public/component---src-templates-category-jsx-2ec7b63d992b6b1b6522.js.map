{"version":3,"sources":["webpack:///./src/templates/category.jsx","webpack:///./node_modules/react-md/lib/Media/index.js","webpack:///./src/components/PostPreview/index.jsx","webpack:///./src/components/PostListing/index.jsx"],"names":["CategoryTemplate","render","category","this","props","pageContext","postEdges","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_4__","location","title","charAt","toUpperCase","slice","className","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","_data_SiteConfig__WEBPACK_IMPORTED_MODULE_5___default","siteTitle","rel","href","siteUrl","_components_PostListing__WEBPACK_IMPORTED_MODULE_3__","Component","pageQuery","exports","__esModule","MediaOverlay","Media","undefined","_Media3","_interopRequireDefault","__webpack_require__","_MediaOverlay3","obj","default","components_PostPreview","PostPreview","_this","_Component","call","state","mobile","handleResize","bind","assertThisInitialized_default","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","innerWidth","setState","postInfo","expand","coverHeight","react_default","Card_default","key","path","raise","gatsby_browser_entry","style","textDecoration","to","Media_default","height","paddingBottom","PostCover","postNode","FontIcons_default","iconClassName","moment_default","date","format","SiteConfig_default","dateFormat","CardText_default","expandable","excerpt","PostTags","tags","react","components_PostListing_PostListing","getPostList","postList","forEach","postEdge","push","node","fields","slug","frontmatter","cover","timeToRead","map","post","__webpack_exports__"],"mappings":"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","file":"component---src-templates-category-jsx-2ec7b63d992b6b1b6522.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport PostListing from '../components/PostListing'\nimport Layout from '../layout'\nimport config from '../../data/SiteConfig'\n\nexport default class CategoryTemplate extends React.Component {\n  render() {\n    const { category } = this.props.pageContext\n    const postEdges = this.props.data.allMarkdownRemark.edges\n    return (\n      <Layout\n        location={this.props.location}\n        title={category.charAt(0).toUpperCase() + category.slice(1)}\n      >\n        <div className=\"category-container\">\n          <Helmet>\n            <title>\n              {`Posts in category \"${category}\" | ${config.siteTitle}`}\n            </title>\n            <link\n              rel=\"canonical\"\n              href={`${config.siteUrl}/categories/${category}`}\n            />\n          </Helmet>\n          <PostListing postEdges={postEdges} />\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport const pageQuery = graphql`\n  query CategoryPage($category: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [fields___date], order: DESC }\n      filter: { frontmatter: { category: { eq: $category } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n          }\n        }\n      }\n    }\n  }\n`\n","'use strict';\n\nexports.__esModule = true;\nexports.MediaOverlay = exports.Media = undefined;\n\nvar _Media2 = require('./Media');\n\nvar _Media3 = _interopRequireDefault(_Media2);\n\nvar _MediaOverlay2 = require('./MediaOverlay');\n\nvar _MediaOverlay3 = _interopRequireDefault(_MediaOverlay2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Media3.default;\nexports.Media = _Media3.default;\nexports.MediaOverlay = _MediaOverlay3.default;","import React, { Component } from 'react'\nimport Card from 'react-md/lib/Cards/Card'\nimport CardText from 'react-md/lib/Cards/CardText'\nimport FontIcon from 'react-md/lib/FontIcons'\nimport { Link } from 'gatsby'\nimport moment from 'moment'\nimport Media from 'react-md/lib/Media'\nimport PostTags from '../PostTags'\nimport PostCover from '../PostCover'\nimport config from '../../../data/SiteConfig'\nimport './PostPreview.scss'\n\nclass PostPreview extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      mobile: true\n    }\n    this.handleResize = this.handleResize.bind(this)\n  }\n\n  componentDidMount() {\n    this.handleResize()\n    window.addEventListener('resize', this.handleResize)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize)\n  }\n\n  handleResize() {\n    if (window.innerWidth >= 640) {\n      this.setState({ mobile: false })\n    } else {\n      this.setState({ mobile: true })\n    }\n  }\n\n  render() {\n    const { postInfo } = this.props\n    const { mobile } = this.state\n    const expand = mobile\n    /* eslint no-undef: \"off\" */\n    const coverHeight = mobile ? 162 : 225\n    return (\n      <Card key={postInfo.path} raise className=\"md-grid md-cell md-cell--12\">\n        <Link style={{ textDecoration: 'none' }} to={postInfo.path}>\n          <Media style={{ height: coverHeight, paddingBottom: '0px' }}>\n            <PostCover postNode={postInfo} coverHeight={coverHeight} />\n          </Media>\n          <div className=\"title-container\">\n            <h2>{postInfo.title}</h2>\n            <div className=\"date\">\n              <FontIcon iconClassName=\"fa fa-calendar\" />\n              {moment(postInfo.date).format(config.dateFormat)}\n            </div>\n          </div>\n        </Link>\n\n        <CardText expandable={expand}>\n          {postInfo.excerpt}\n          <PostTags tags={postInfo.tags} />\n        </CardText>\n      </Card>\n    )\n  }\n}\n\nexport default PostPreview\n","import React from 'react'\nimport PostPreview from '../PostPreview'\nimport './PostListing.scss'\n\nclass PostListing extends React.Component {\n  getPostList() {\n    const { postEdges } = this.props\n    const postList = []\n    postEdges.forEach(postEdge => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.fields.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead\n      })\n    })\n    return postList\n  }\n\n  render() {\n    const postList = this.getPostList()\n    return (\n      <div className=\"md-grid md-grid--no-spacing md-cell--middle\">\n        <div className=\"post-preview-wrap\">\n          {postList.map(post => (\n            <PostPreview key={post.title} postInfo={post} />\n          ))}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PostListing\n"],"sourceRoot":""}