{"version":3,"sources":["webpack:///./src/pages/index.jsx","webpack:///./node_modules/url-join/lib/url-join.js","webpack:///./node_modules/react-md/lib/Media/index.js","webpack:///./src/components/PostPreview/index.jsx","webpack:///./src/components/PostListing/index.jsx","webpack:///./src/components/SEO/index.jsx"],"names":["Index","render","_this$props","this","props","data","location","postEdges","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_3__","title","className","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","config","siteTitle","rel","href","siteUrl","_components_SEO__WEBPACK_IMPORTED_MODULE_5__","_components_PostListing__WEBPACK_IMPORTED_MODULE_4__","React","Component","pageQuery","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","definition","strArray","resultArray","match","length","first","shift","replace","i","component","TypeError","push","str","join","parts","split","normalize","arguments","slice","call","module","exports","undefined","__webpack_require__","__esModule","MediaOverlay","Media","_Media3","_interopRequireDefault","_MediaOverlay3","obj","default","PostPreview","_this","_Component","state","mobile","handleResize","bind","assertThisInitialized_default","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","innerWidth","setState","postInfo","expand","coverHeight","react_default","Card_default","key","path","raise","gatsby_browser_entry","style","textDecoration","to","Media_default","height","paddingBottom","PostCover","postNode","FontIcons_default","iconClassName","moment","date","format","dateFormat","CardText_default","expandable","excerpt","PostTags","tags","PostListing","getPostList","postList","forEach","postEdge","node","fields","slug","frontmatter","cover","timeToRead","map","post","components_PostPreview","SEO","description","image","postURL","postPath","postSEO","postMeta","urljoin","pathPrefix","siteDescription","siteLogo","blogURL","schemaOrgJSONLD","@context","@type","url","name","alternateName","siteTitleAlt","itemListElement","position","item","@id","headline","react__WEBPACK_IMPORTED_MODULE_2___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","content","type","JSON","stringify","property","siteFBAppID","userTwitter"],"mappings":"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","file":"component---src-pages-index-jsx-4bd4893a4238c1067e1a.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport Layout from '../layout'\nimport PostListing from '../components/PostListing'\nimport SEO from '../components/SEO'\nimport config from '../../data/SiteConfig'\n\nclass Index extends React.Component {\n  render() {\n    const { data, location } = this.props\n    const postEdges = data.allMarkdownRemark.edges\n    return (\n      <Layout location={location} title=\"John`s Dev log\">\n        <div className=\"index-container\">\n          <Helmet>\n            <title>{config.siteTitle}</title>\n            <link rel=\"canonical\" href={`${config.siteUrl}`} />\n          </Helmet>\n          <SEO postEdges={postEdges} />\n          <PostListing postEdges={postEdges} />\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default Index\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [fields___date], order: DESC }\n    ) {\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n          }\n        }\n      }\n    }\n  }\n`\n","(function (name, context, definition) {\n  if (typeof module !== 'undefined' && module.exports) module.exports = definition();\n  else if (typeof define === 'function' && define.amd) define(definition);\n  else context[name] = definition();\n})('urljoin', this, function () {\n\n  function normalize (strArray) {\n    var resultArray = [];\n\n    // If the first part is a plain protocol, we combine it with the next part.\n    if (strArray[0].match(/^[^/:]+:\\/*$/) && strArray.length > 1) {\n      var first = strArray.shift();\n      strArray[0] = first + strArray[0];\n    }\n\n    // There must be two or three slashes in the file protocol, two slashes in anything else.\n    if (strArray[0].match(/^file:\\/\\/\\//)) {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1:///');\n    } else {\n      strArray[0] = strArray[0].replace(/^([^/:]+):\\/*/, '$1://');\n    }\n\n    for (var i = 0; i < strArray.length; i++) {\n      var component = strArray[i];\n\n      if (typeof component !== 'string') {\n        throw new TypeError('Url must be a string. Received ' + component);\n      }\n\n      if (component === '') { continue; }\n\n      if (i > 0) {\n        // Removing the starting slashes for each component but the first.\n        component = component.replace(/^[\\/]+/, '');\n      }\n      if (i < strArray.length - 1) {\n        // Removing the ending slashes for each component but the last.\n        component = component.replace(/[\\/]+$/, '');\n      } else {\n        // For the last component we will combine multiple slashes to a single one.\n        component = component.replace(/[\\/]+$/, '/');\n      }\n\n      resultArray.push(component);\n\n    }\n\n    var str = resultArray.join('/');\n    // Each input component is now separated by a single slash except the possible first plain protocol part.\n\n    // remove trailing slash before parameters or hash\n    str = str.replace(/\\/(\\?|&|#[^!])/g, '$1');\n\n    // replace ? in parameters with &\n    var parts = str.split('?');\n    str = parts.shift() + (parts.length > 0 ? '?': '') + parts.join('&');\n\n    return str;\n  }\n\n  return function () {\n    var input;\n\n    if (typeof arguments[0] === 'object') {\n      input = arguments[0];\n    } else {\n      input = [].slice.call(arguments);\n    }\n\n    return normalize(input);\n  };\n\n});\n","'use strict';\n\nexports.__esModule = true;\nexports.MediaOverlay = exports.Media = undefined;\n\nvar _Media2 = require('./Media');\n\nvar _Media3 = _interopRequireDefault(_Media2);\n\nvar _MediaOverlay2 = require('./MediaOverlay');\n\nvar _MediaOverlay3 = _interopRequireDefault(_MediaOverlay2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Media3.default;\nexports.Media = _Media3.default;\nexports.MediaOverlay = _MediaOverlay3.default;","import React, { Component } from 'react'\nimport Card from 'react-md/lib/Cards/Card'\nimport CardText from 'react-md/lib/Cards/CardText'\nimport FontIcon from 'react-md/lib/FontIcons'\nimport { Link } from 'gatsby'\nimport moment from 'moment'\nimport Media from 'react-md/lib/Media'\nimport PostTags from '../PostTags'\nimport PostCover from '../PostCover'\nimport config from '../../../data/SiteConfig'\nimport './PostPreview.scss'\n\nclass PostPreview extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      mobile: true\n    }\n    this.handleResize = this.handleResize.bind(this)\n  }\n\n  componentDidMount() {\n    this.handleResize()\n    window.addEventListener('resize', this.handleResize)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize)\n  }\n\n  handleResize() {\n    if (window.innerWidth >= 640) {\n      this.setState({ mobile: false })\n    } else {\n      this.setState({ mobile: true })\n    }\n  }\n\n  render() {\n    const { postInfo } = this.props\n    const { mobile } = this.state\n    const expand = mobile\n    /* eslint no-undef: \"off\" */\n    const coverHeight = mobile ? 162 : 225\n    return (\n      <Card key={postInfo.path} raise className=\"md-grid md-cell md-cell--12\">\n        <Link style={{ textDecoration: 'none' }} to={postInfo.path}>\n          <Media style={{ height: coverHeight, paddingBottom: '0px' }}>\n            <PostCover postNode={postInfo} coverHeight={coverHeight} />\n          </Media>\n          <div className=\"title-container\">\n            <h2>{postInfo.title}</h2>\n            <div className=\"date\">\n              <FontIcon iconClassName=\"fa fa-calendar\" />\n              {moment(postInfo.date).format(config.dateFormat)}\n            </div>\n          </div>\n        </Link>\n\n        <CardText expandable={expand}>\n          {postInfo.excerpt}\n          <PostTags tags={postInfo.tags} />\n        </CardText>\n      </Card>\n    )\n  }\n}\n\nexport default PostPreview\n","import React from 'react'\nimport PostPreview from '../PostPreview'\nimport './PostListing.scss'\n\nclass PostListing extends React.Component {\n  getPostList() {\n    const { postEdges } = this.props\n    const postList = []\n    postEdges.forEach(postEdge => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.fields.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead\n      })\n    })\n    return postList\n  }\n\n  render() {\n    const postList = this.getPostList()\n    return (\n      <div className=\"md-grid md-grid--no-spacing md-cell--middle\">\n        <div className=\"post-preview-wrap\">\n          {postList.map(post => (\n            <PostPreview key={post.title} postInfo={post} />\n          ))}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PostListing\n","import React, { Component } from 'react'\nimport Helmet from 'react-helmet'\nimport urljoin from 'url-join'\nimport config from '../../../data/SiteConfig'\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props\n    let title\n    let description\n    let image\n    let postURL\n    if (postSEO) {\n      const postMeta = postNode.frontmatter\n      ;({ title } = postMeta)\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt\n      image = postMeta.cover\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath)\n    } else {\n      title = config.siteTitle\n      description = config.siteDescription\n      image = config.siteLogo\n    }\n    image = urljoin(config.siteUrl, config.pathPrefix, image)\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix)\n    const schemaOrgJSONLD = [\n      {\n        '@context': 'http://schema.org',\n        '@type': 'WebSite',\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : ''\n      }\n    ]\n    if (postSEO) {\n      schemaOrgJSONLD.push([\n        {\n          '@context': 'http://schema.org',\n          '@type': 'BreadcrumbList',\n          itemListElement: [\n            {\n              '@type': 'ListItem',\n              position: 1,\n              item: {\n                '@id': postURL,\n                name: title,\n                image\n              }\n            }\n          ]\n        },\n        {\n          '@context': 'http://schema.org',\n          '@type': 'BlogPosting',\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n          headline: title,\n          image: {\n            '@type': 'ImageObject',\n            url: image\n          },\n          description\n        }\n      ])\n    }\n    image = `https://john015.github.io/assets/${\n      image.split('https://john015.github.io/')[1]\n    }`\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : ''}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : ''}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    )\n  }\n}\n\nexport default SEO\n"],"sourceRoot":""}