{"version":3,"sources":["webpack:///./src/templates/tag.jsx","webpack:///./node_modules/react-md/lib/Media/index.js","webpack:///./src/components/PostPreview/index.jsx","webpack:///./src/components/PostListing/index.jsx"],"names":["TagTemplate","render","_this$props","this","props","pageContext","location","data","tag","postEdges","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_layout__WEBPACK_IMPORTED_MODULE_3__","title","className","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","config","siteTitle","rel","href","siteUrl","_components_PostListing__WEBPACK_IMPORTED_MODULE_4__","React","Component","pageQuery","exports","__esModule","MediaOverlay","Media","undefined","_Media3","_interopRequireDefault","__webpack_require__","_MediaOverlay3","obj","default","PostPreview","_this","_Component","call","state","mobile","handleResize","bind","assertThisInitialized_default","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","innerWidth","setState","postInfo","expand","coverHeight","react_default","Card_default","key","path","raise","gatsby_browser_entry","style","textDecoration","to","Media_default","height","paddingBottom","PostCover","postNode","FontIcons_default","iconClassName","moment","date","format","dateFormat","CardText_default","expandable","excerpt","PostTags","tags","PostListing","getPostList","postList","forEach","postEdge","push","node","fields","slug","frontmatter","cover","timeToRead","map","post","components_PostPreview"],"mappings":"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","file":"component---src-templates-tag-jsx-177cb86f1b256efe4289.js","sourcesContent":["import React from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport Layout from '../layout'\nimport PostListing from '../components/PostListing'\nimport config from '../../data/SiteConfig'\n\nexport default class TagTemplate extends React.Component {\n  render() {\n    const { pageContext, location, data } = this.props\n    const { tag } = pageContext\n    const postEdges = data.allMarkdownRemark.edges\n    return (\n      <Layout location={location} title={`Tagged in ${tag}`}>\n        <div className=\"tag-container\">\n          <Helmet>\n            <title>{`Posts tagged as \"${tag}\" | ${config.siteTitle}`}</title>\n            <link rel=\"canonical\" href={`${config.siteUrl}/tags/${tag}`} />\n          </Helmet>\n          <PostListing postEdges={postEdges} />\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport const pageQuery = graphql`\n  query TagPage($tag: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [fields___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n            date\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n          }\n        }\n      }\n    }\n  }\n`\n","'use strict';\n\nexports.__esModule = true;\nexports.MediaOverlay = exports.Media = undefined;\n\nvar _Media2 = require('./Media');\n\nvar _Media3 = _interopRequireDefault(_Media2);\n\nvar _MediaOverlay2 = require('./MediaOverlay');\n\nvar _MediaOverlay3 = _interopRequireDefault(_MediaOverlay2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _Media3.default;\nexports.Media = _Media3.default;\nexports.MediaOverlay = _MediaOverlay3.default;","import React, { Component } from 'react'\nimport Card from 'react-md/lib/Cards/Card'\nimport CardText from 'react-md/lib/Cards/CardText'\nimport FontIcon from 'react-md/lib/FontIcons'\nimport { Link } from 'gatsby'\nimport moment from 'moment'\nimport Media from 'react-md/lib/Media'\nimport PostTags from '../PostTags'\nimport PostCover from '../PostCover'\nimport config from '../../../data/SiteConfig'\nimport './PostPreview.scss'\n\nclass PostPreview extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      mobile: true\n    }\n    this.handleResize = this.handleResize.bind(this)\n  }\n\n  componentDidMount() {\n    this.handleResize()\n    window.addEventListener('resize', this.handleResize)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize)\n  }\n\n  handleResize() {\n    if (window.innerWidth >= 640) {\n      this.setState({ mobile: false })\n    } else {\n      this.setState({ mobile: true })\n    }\n  }\n\n  render() {\n    const { postInfo } = this.props\n    const { mobile } = this.state\n    const expand = mobile\n    /* eslint no-undef: \"off\" */\n    const coverHeight = mobile ? 162 : 225\n    return (\n      <Card\n        key={postInfo.path}\n        raise\n        className=\" post-preview md-grid md-cell md-cell--12\"\n      >\n        <Link style={{ textDecoration: 'none' }} to={postInfo.path}>\n          <Media style={{ height: coverHeight, paddingBottom: '0px' }}>\n            <PostCover postNode={postInfo} coverHeight={coverHeight} />\n          </Media>\n          <div className=\"title-container\">\n            <h2>{postInfo.title}</h2>\n            <div className=\"date\">\n              <FontIcon iconClassName=\"fa fa-calendar\" />\n              {moment(postInfo.date).format(config.dateFormat)}\n            </div>\n          </div>\n        </Link>\n\n        <CardText expandable={expand}>\n          {postInfo.excerpt}\n          <PostTags tags={postInfo.tags} />\n        </CardText>\n      </Card>\n    )\n  }\n}\n\nexport default PostPreview\n","import React from 'react'\nimport PostPreview from '../PostPreview'\nimport './PostListing.scss'\n\nclass PostListing extends React.Component {\n  getPostList() {\n    const { postEdges } = this.props\n    const postList = []\n    postEdges.forEach(postEdge => {\n      postList.push({\n        path: postEdge.node.fields.slug,\n        tags: postEdge.node.frontmatter.tags,\n        cover: postEdge.node.frontmatter.cover,\n        title: postEdge.node.frontmatter.title,\n        date: postEdge.node.fields.date,\n        excerpt: postEdge.node.excerpt,\n        timeToRead: postEdge.node.timeToRead\n      })\n    })\n    return postList\n  }\n\n  render() {\n    const postList = this.getPostList()\n    return (\n      <div className=\"md-grid md-grid--no-spacing md-cell--middle\">\n        <div className=\"post-preview-wrap\">\n          {postList.map(post => (\n            <PostPreview key={post.title} postInfo={post} />\n          ))}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PostListing\n"],"sourceRoot":""}