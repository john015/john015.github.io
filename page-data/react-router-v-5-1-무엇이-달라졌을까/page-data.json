{"componentChunkName":"component---src-templates-post-jsx","path":"/react-router-v-5-1-무엇이-달라졌을까","webpackCompilationHash":"f873af2a8a5f6110d0af","result":{"data":{"markdownRemark":{"html":"<p>React로 개발할 때 라우팅을 하기 위해 주로 사용되는 react-router가 9월 25일 v5.1로 업데이트되었습니다.</p>\n<p>v5.1에서는 올해 2월 react v16.8에 추가된 hooks API가 추가되었는데요, 같이 어떤 기능들이 새로 생겼는지 알아보도록 하겠습니다.</p>\n<h2 id=\"useparams\"><a href=\"#useparams\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>useParams</h2>\n<p>기존에 <code class=\"language-text\">&lt;Route&gt;</code>로 사용되지 않은 컴포넌트에서 <code class=\"language-text\">match, location, history</code> 객체에 접근하려면 <code class=\"language-text\">withRouter</code>HoC로 컴포넌트를 감싸줘야 했습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// &lt;= v5.0</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">BlogPost</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>match<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> slug <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> match<span class=\"token punctuation\">.</span>params\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">withRouter</span><span class=\"token punctuation\">(</span>BlogPost<span class=\"token punctuation\">)</span></code></pre></div>\n<br/>\n<p>v5.1부터 <code class=\"language-text\">useParams</code> hook이 추가되면서 손쉽게 <code class=\"language-text\">match.params</code> 객체에 접근할 수 있게 되었습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useParams <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router'</span>\n<span class=\"token comment\">// >= v5.1</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">BlogPost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> slug <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token function\">useParams</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"usehistory\"><a href=\"#usehistory\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>useHistory</h2>\n<p><code class=\"language-text\">useHistory</code>은 <code class=\"language-text\">useParams</code>와 같이 <code class=\"language-text\">withRouter</code>HoC를 사용하지 않고 <code class=\"language-text\">location</code>객\u001c체에 접근할 수 있게 해주는 hook입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// &lt;= v5.0</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">BlogPost</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> history <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">withRouter</span><span class=\"token punctuation\">(</span>BlogPost<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\">// >= v5.1</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useHistory <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router'</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">BlogPost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> history <span class=\"token operator\">=</span> <span class=\"token function\">useHistory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"uselocation\"><a href=\"#uselocation\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>useLocation</h2>\n<p><code class=\"language-text\">useLocation</code>은 위 두 가지 hooks들과 마찬가지로 <code class=\"language-text\">location</code>객체에 접근할 수 있게 해주는 hook입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// &lt;= v5.0</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">BlogPost</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> location <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">withRouter</span><span class=\"token punctuation\">(</span>BlogPost<span class=\"token punctuation\">)</span>\n\n\n<span class=\"token comment\">// >= v5.1</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useLocation <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router'</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">BlogPost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> location <span class=\"token operator\">=</span> <span class=\"token function\">useLocation</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"useroutematch\"><a href=\"#useroutematch\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>useRouteMatch</h2>\n<p><code class=\"language-text\">useRouteMatch</code>는 <code class=\"language-text\">match</code>객체의 값에 접근할 수 있게 해주는 hook입니다. </p>\n<p>또한 인자로 <code class=\"language-text\">&lt;Route&gt;</code>컴포넌트의 프로퍼티들(<code class=\"language-text\">path</code>, <code class=\"language-text\">strict</code>, <code class=\"language-text\">sensitive</code>, <code class=\"language-text\">exact</code>)을 가진 객체를 받을 수 있으며, 만약 <code class=\"language-text\">path</code>프로퍼티와 현재 페이지의 URL이 일치할 경우 해당 <code class=\"language-text\">path</code>의 <code class=\"language-text\">match</code>객체를 반환하고 일치하지 않을 경우 <code class=\"language-text\">null</code>을 반환합니다. </p>\n<p>만약 아무 인자도 넘겨주지 않고 해당 hook을 호출하면 <code class=\"language-text\">withRouter</code> HoC로 <code class=\"language-text\">match</code>객체를 접근했을 때처럼 제일 가까운 부모 <code class=\"language-text\">&lt;Route&gt;</code>컴포넌트의 <code class=\"language-text\">match</code>값을 리턴합니다.  </p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 페이지의 url이 \"/BLOG/:slug/\"와 일치할 때 BlogPost 컴포넌트를 렌더링하고 싶은 경우</span>\n\n<span class=\"token comment\">// &lt;= v5.0</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Route\n        path<span class=\"token operator\">=</span><span class=\"token string\">\"/BLOG/:slug/\"</span>\n        strict\n        sensitive\n        render<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> match <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">return</span> match <span class=\"token operator\">?</span> <span class=\"token operator\">&lt;</span>BlogPost match<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>match<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span> <span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>NotFound <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n      <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// &lt;= v5.1</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> useRouteMatch <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router'</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> match <span class=\"token operator\">=</span> <span class=\"token function\">useRouteMatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    path<span class=\"token punctuation\">:</span> <span class=\"token string\">'/BLOG/:slug/'</span><span class=\"token punctuation\">,</span>\n    strict<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    sensitive<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span>match <span class=\"token operator\">?</span> <span class=\"token operator\">&lt;</span>BlogPost match<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>match<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span> <span class=\"token punctuation\">:</span> <span class=\"token operator\">&lt;</span>NotFound <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<br/>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 제일 가까운 부모 &lt;Route>컴포넌트의 match객체에 접근 하고 싶은 경우</span>\n\n<span class=\"token comment\">// &lt;= v5.0</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">BlogPost</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> match <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">withRouter</span><span class=\"token punctuation\">(</span>BlogPost<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// >= v5.1</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">BlogPost</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> match <span class=\"token operator\">=</span> <span class=\"token function\">useRouteMatch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"migration-guide\"><a href=\"#migration-guide\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Migration guide</h2>\n<p><code class=\"language-text\">react-router v5</code>는 v4와 호환되게 개발되었기 때문에 기존 프로젝트에 <code class=\"language-text\">react &gt;= 16.8</code>, <code class=\"language-text\">react-router &gt;= 4</code> 버전을 사용하고 계셨다면 별다른 작업 없이 react-router 버전을 올리실 수 있습니다.</p>\n<p>만약 v5.1에 새롭게 추가된 기능들로 기존 소스들을 리팩토링 하고 싶으시다면 <a href=\"https://reacttraining.com/blog/react-router-v5-1/#staying-ahead-of-the-curve\">공식 블로그</a>를 참고해주세요.</p>\n<h2 id=\"reference\"><a href=\"#reference\" aria-hidden class=\"anchor\"><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h2>\n<ul>\n<li><a href=\"https://reacttraining.com/blog/react-router-v5-1\">https://reacttraining.com/blog/react-router-v5-1</a></li>\n</ul>","timeToRead":3,"excerpt":"React로 개발할 때 라우팅을 하기 위해 주로 사용되는 react-router가 9월 25일 v5.1로 업데이트되었습니다. v5.1에서는 올해 2월 react v16.8에 추가된 hooks API…","frontmatter":{"title":"React-router v5.1, 무엇이 달라졌을까?","cover":"react-router.png","date":"2019-09-29","category":"tech","tags":["React","React router"]},"fields":{"slug":"/react-router-v-5-1-무엇이-달라졌을까","date":"2019-09-28T15:00:00.000Z"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/react-router-v-5-1-무엇이-달라졌을까"}}}