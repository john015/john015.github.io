{"version":3,"sources":["webpack:///./data/SiteConfig.js","webpack:///./src/components/PostTags/index.jsx","webpack:///./src/components/UserLinks/index.jsx","webpack:///./src/components/ToolbarActions/index.jsx","webpack:///./src/components/Footer/index.jsx","webpack:///./src/components/Navigation/NavList.jsx","webpack:///./src/components/Navigation/index.jsx","webpack:///./src/layout/index.jsx","webpack:///./src/components/PostCover/PostCoverComponent.jsx","webpack:///./src/components/PostCover/index.jsx"],"names":["config","siteTitle","siteTitleShort","siteTitleAlt","siteLogo","siteUrl","pathPrefix","fixedFooter","siteDescription","siteRss","siteFBAppID","siteGATrackingID","disqusShortname","postDefaultCategoryID","dateFromFormat","dateFormat","userName","userEmail","userLinks","label","url","iconClassName","copyright","replace","substr","slice","module","exports","PostTags","render","tags","this","props","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","className","map","tag","gatsby__WEBPACK_IMPORTED_MODULE_3__","key","style","textDecoration","to","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_1___default","react_md_lib_Chips__WEBPACK_IMPORTED_MODULE_4___default","Component","UserLinks","getLinkElements","labeled","link","react_default","Buttons_default","icon","flat","secondary","href","Toolbar","components_UserLinks","Footer","GetNavList","NavList","primaryText","leftIcon","FontIcons_default","component","Link","divider","forEach","push","forceSize","Navigation","_this$props","children","NavigationDrawers_default","drawerTitle","toolbarTitle","gatsby_browser_entry","contentClassName","navItems","mobileDrawerType","NavigationDrawer","DrawerTypes","TEMPORARY","tabletDrawerType","desktopDrawerType","toolbarActions","components_ToolbarActions","components_Footer","MainLayout","title","components_Navigation","LocalTitle","Helmet_default","name","content","React","PostCover","fileEdges","postNode","coverHeight","coverClassName","post","frontmatter","coverNodeList","filter","fileNode","node","childImageSharp","absolutePath","indexOf","path","join","cover","length","gatsby_image_default","fluid","outerWrapperClassName","height","width","coverURL","substring","__PATH_PREFIX__","backgroundImage","queryWrapper","query","data","PostCoverComponent","allFile","edges","_1492265892"],"mappings":"mFAAA,IAAMA,EAAS,CACbC,UAAW,iBACXC,eAAgB,iBAChBC,aAAc,aACdC,SAAU,GACVC,QAAS,4BACTC,WAAY,IACZC,aAAa,EACbC,gBAAiB,oBACjBC,QAAS,WACTC,YAAa,mBACbC,iBAAkB,iBAClBC,gBAAiB,eACjBC,sBAAuB,OACvBC,eAAgB,aAChBC,WAAY,aACZC,SAAU,UACVC,UAAW,uBAEXC,UAAW,CACT,CACEC,MAAO,SACPC,IAAK,6BACLC,cAAe,gBAEjB,CACEF,MAAO,QACPC,IAAK,8BACLC,cAAe,kBAEjB,CACEF,MAAO,MACPC,IAAK,oCACLC,cAAe,cAGnBC,UAAW,+DAMa,MAAtBtB,EAAOM,WACTN,EAAOM,WAAa,GAGpBN,EAAOM,WAAP,IAAwBN,EAAOM,WAAWiB,QAAQ,WAAY,IAI9B,MAA9BvB,EAAOK,QAAQmB,QAAQ,KACzBxB,EAAOK,QAAUL,EAAOK,QAAQoB,MAAM,GAAI,IAGxCzB,EAAOS,SAAiC,MAAtBT,EAAOS,QAAQ,KACnCT,EAAOS,QAAP,IAAqBT,EAAOS,SAE9BiB,EAAOC,QAAU3B,oHCnDX4B,oGACJC,OAAA,WAAS,IACCC,EAASC,KAAKC,MAAdF,KACR,OACEG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACZN,GACCA,EAAKO,IAAI,SAAAC,GAAG,OACVL,EAAAC,EAAAC,cAACI,EAAA,KAAD,CACEC,IAAKF,EACLG,MAAO,CAAEC,eAAgB,QACzBC,GAAE,SAAWC,IAAYN,IAEzBL,EAAAC,EAAAC,cAACU,EAAAX,EAAD,CAAMf,MAAK,IAAMmB,EAAOF,UAAU,8BAZzBU,cAoBRlB,mJCIAmB,4GAzBbC,gBAAA,WAAkB,IACR9B,EAAca,KAAKC,MAAMhC,OAAzBkB,UACA+B,EAAYlB,KAAKC,MAAjBiB,QACR,OAAO/B,EAAUmB,IAAI,SAAAa,GAAI,OACvBC,EAAAjB,EAAAC,cAACiB,EAAAlB,EAAD,CACEmB,MAAOJ,EACPK,KAAML,EACNM,WAAS,EACTf,IAAKU,EAAK/B,MACVE,cAAe6B,EAAK7B,cACpBmC,KAAMN,EAAK9B,KAEV6B,EAAUC,EAAK/B,MAAQ,SAI9BU,OAAA,WAEE,OADsBE,KAAKC,MAAMhC,OAAzBkB,UAIDiC,EAAAjB,EAAAC,cAAA,OAAKC,UAAU,cAAcL,KAAKiB,mBAFhC,SApBWF,cCaTW,oGAZb5B,OAAA,WAAS,IACC7B,EAAW+B,KAAKC,MAAhBhC,OACR,OACEmD,EAAAjB,EAAAC,cAAA,OAAKC,UAAU,mBACbe,EAAAjB,EAAAC,cAAA,OAAKC,UAAU,uBACbe,EAAAjB,EAAAC,cAACuB,EAAD,CAAW1D,OAAQA,UANP8C,gCCgCPa,oGA/Bb9B,OAAA,WAAS,IACCP,EAA2BtB,IAA3BsB,UAAWf,EAAgBP,IAAhBO,YACnB,OAAKe,EAIH6B,EAAAjB,EAAAC,cAAA,UAAQC,UAAW7B,EAAc,sBAAwB,UACvD4C,EAAAjB,EAAAC,cAAA,OAAKC,UAAU,oBACbe,EAAAjB,EAAAC,cAAA,QAAMC,UAAU,aACde,EAAAjB,EAAAC,cAAA,UAAKb,IAEP6B,EAAAjB,EAAAC,cAAA,WACAgB,EAAAjB,EAAAC,cAAA,QAAMC,UAAU,YACde,EAAAjB,EAAAC,cAAA,uBAEEgB,EAAAjB,EAAAC,cAAA,KAAGqB,KAAK,6BAAR,kBAZD,SAJQV,wCC2BNc,MA3Bf,SAAoB5D,GAClB,IAAM6D,EAAU,CACd,CACEC,YAAa,OACbC,SAAUZ,EAAAjB,EAAAC,cAAC6B,EAAA9B,EAAD,aACV+B,UAAWC,OACXvB,GAAI,KAEN,CACEwB,SAAS,IAgBb,OAZInE,EAAOkB,WACTlB,EAAOkB,UAAUkD,QAAQ,SAAAlB,GACvBW,EAAQQ,KAAK,CACXP,YAAaZ,EAAK/B,MAClB4C,SAAUZ,EAAAjB,EAAAC,cAAC6B,EAAA9B,EAAD,CAAUoC,WAAS,EAACjD,cAAe6B,EAAK7B,gBAClD4C,UAAW,IACXT,KAAMN,EAAK9B,QAKjByC,EAAQQ,KAAK,CAAEF,SAAS,IACjBN,GCIMU,oGAxBb1C,OAAA,WAAS,IAAA2C,EACsBzC,KAAKC,MAA1ByC,EADDD,EACCC,SAAUzE,EADXwE,EACWxE,OAClB,OACEmD,EAAAjB,EAAAC,cAACuC,EAAAxC,EAAD,CACEyC,YAAa3E,EAAOC,UACpB2E,aACEzB,EAAAjB,EAAAC,cAAC0C,EAAA,KAAD,CAAMlC,GAAG,IAAIP,UAAU,aAAvB,kBAIF0C,iBAAiB,eACjBC,SAAUnB,EAAW5D,GACrBgF,iBAAkBC,IAAiBC,YAAYC,UAC/CC,iBAAkBH,IAAiBC,YAAYC,UAC/CE,kBAAmBJ,IAAiBC,YAAYC,UAChDG,eAAgBnC,EAAAjB,EAAAC,cAACoD,EAAD,CAAgBvF,OAAQA,KAExCmD,EAAAjB,EAAAC,cAAA,OAAKC,UAAU,kBAAkBqC,GACjCtB,EAAAjB,EAAAC,cAACqD,EAAD,WAnBiB1C,gECAJ2C,4FACnB5D,OAAA,WAAS,IAAA2C,EACqBzC,KAAKC,MAAzByC,EADDD,EACCC,SAAUiB,EADXlB,EACWkB,MAClB,OACEvC,EAAAjB,EAAAC,cAACwD,EAAD,CAAY3F,OAAQA,IAAQ4F,WAAYF,GACtCvC,EAAAjB,EAAAC,cAAA,WACEgB,EAAAjB,EAAAC,cAAC0D,EAAA3D,EAAD,KACEiB,EAAAjB,EAAAC,cAAA,QAAM2D,KAAK,cAAcC,QAAS/F,IAAOQ,mBAE1CiE,QAT6BuB,IAAMlD,sICyC/BmD,oGA3CbpE,OAAA,WAAS,IAAA2C,EACsDzC,KAAKC,MAA1DkE,EADD1B,EACC0B,UAAWC,EADZ3B,EACY2B,SAAUC,EADtB5B,EACsB4B,YAAaC,EADnC7B,EACmC6B,eACpCC,EAAOH,EAASI,YAAcJ,EAASI,YAAcJ,EACrDK,EAAgBN,EAAUO,OAAO,SAAAC,GACrC,OAAsC,OAAlCA,EAASC,KAAKC,kBAKT,IAFPF,EAASC,KAAKE,aAAaC,QACzBC,IAAKC,KAAK,kBAAmBV,EAAKW,UAQxC,GAA6B,IAAzBT,EAAcU,OAChB,OACE/D,EAAAjB,EAAAC,cAACgF,EAAAjF,EAAD,CACEkF,MAAOZ,EAAc,GAAGG,KAAKC,gBAAgBQ,MAC7CC,sBAAuBhB,EACvB5D,MAAO,CAAE6E,OAAQlB,EAAamB,MAAO,UAM3C,IAAMC,EAC2B,MAA/BlB,EAAKW,MAAMQ,UAAU,EAAG,GACpBC,GAAkBpB,EAAKW,MACvBX,EAAKW,MACX,OACE9D,EAAAjB,EAAAC,cAAA,OACEM,MAAO,CACLkF,gBAAe,OAASH,EAAT,IACfF,OAAWlB,EAAL,MAERhE,UAAWiE,QAtCKvD,cCDlB8E,4FACJ/F,OAAA,WAAS,IAAA2C,EAC2CzC,KAAKC,MAA/CmE,EADD3B,EACC2B,SAAUC,EADX5B,EACW4B,YAAaC,EADxB7B,EACwB6B,eAC/B,OACElD,EAAAjB,EAAAC,cAAC0C,EAAA,YAAD,CACEgD,MAAK,aAoCLhG,OAAQ,SAAAiG,GAAI,OACV3E,EAAAjB,EAAAC,cAAC4F,EAAD,CACE7B,UAAW4B,EAAKE,QAAQC,MACxB9B,SAAUA,EACVC,YAAaA,EACbC,eAAgBA,KA1CtByB,KAAAI,QAJqBpF,aAsDZ8E","file":"1-e4a17f155b0feb0a7c46.js","sourcesContent":["const config = {\n  siteTitle: 'John`s Dev log', // Site title.\n  siteTitleShort: 'John`s Dev log', // Short site title for homescreen (PWA). Preferably should be under 12 characters to prevent truncation.\n  siteTitleAlt: 'My Dev log', // Alternative site title for SEO.\n  siteLogo: '', // Logo used for SEO and manifest.\n  siteUrl: 'https://john015.github.io', // Domain of your website without pathPrefix.\n  pathPrefix: '/', // Prefixes all links. For cases when deployed to example.github.io/gatsby-material-starter/.\n  fixedFooter: false, // Whether the footer component is fixed, i.e. always visible\n  siteDescription: '웹 기술에 대한 블로그 입니다.', // Website description used for RSS feeds/meta description tag.\n  siteRss: '/rss.xml', // Path to the RSS file.\n  siteFBAppID: '1825356251115265', // FB Application ID for using app insights\n  siteGATrackingID: 'UA-134073355-1', // Tracking code ID for google analytics.\n  disqusShortname: 'john-dev-log', // Disqus shortname.\n  postDefaultCategoryID: 'Tech', // Default category for posts.\n  dateFromFormat: 'YYYY-MM-DD', // Date format used in the frontmatter.\n  dateFormat: 'YYYY-MM-DD', // Date format for display.\n  userName: 'john015', // Username to display in the author segment.\n  userEmail: 'lsw0150305@gmail.com', // Email used for RSS feed's author segment\n  // Links to social profiles/projects you want to display in the author segment/navigation bar.\n  userLinks: [\n    {\n      label: 'GitHub',\n      url: 'https://github.com/john015',\n      iconClassName: 'fa fa-github'\n    },\n    {\n      label: 'Email',\n      url: 'mailto:lsw0150305@gmail.com',\n      iconClassName: 'fa fa-envelope'\n    },\n    {\n      label: 'RSS',\n      url: 'https://john015.github.io/rss.xml',\n      iconClassName: 'fa fa-rss'\n    }\n  ],\n  copyright: 'All content copyright john015 © 2019 • All rights reserved.' // Copyright string for the footer of the website and RSS feed.\n}\n\n// Validate\n\n// Make sure pathPrefix is empty if not needed\nif (config.pathPrefix === '/') {\n  config.pathPrefix = ''\n} else {\n  // Make sure pathPrefix only contains the first forward slash\n  config.pathPrefix = `/${config.pathPrefix.replace(/^\\/|\\/$/g, '')}`\n}\n\n// Make sure siteUrl doesn't have an ending forward slash\nif (config.siteUrl.substr(-1) === '/')\n  config.siteUrl = config.siteUrl.slice(0, -1)\n\n// Make sure siteRss has a starting forward slash\nif (config.siteRss && config.siteRss[0] !== '/')\n  config.siteRss = `/${config.siteRss}`\n\nmodule.exports = config\n","import React, { Component } from 'react'\nimport _ from 'lodash'\nimport { Link } from 'gatsby'\nimport Chip from 'react-md/lib/Chips'\nimport './PostTags.scss'\n\nclass PostTags extends Component {\n  render() {\n    const { tags } = this.props\n    return (\n      <div className=\"post-tag-container\">\n        {tags &&\n          tags.map(tag => (\n            <Link\n              key={tag}\n              style={{ textDecoration: 'none' }}\n              to={`/tags/${_.kebabCase(tag)}`}\n            >\n              <Chip label={`#${tag}`} className=\"post-preview-tags\" />\n            </Link>\n          ))}\n      </div>\n    )\n  }\n}\n\nexport default PostTags\n","import React, { Component } from \"react\";\nimport Button from \"react-md/lib/Buttons\";\nimport \"./UserLinks.scss\";\n\nclass UserLinks extends Component {\n  getLinkElements() {\n    const { userLinks } = this.props.config;\n    const { labeled } = this.props;\n    return userLinks.map(link => (\n      <Button\n        icon={!labeled}\n        flat={labeled}\n        secondary\n        key={link.label}\n        iconClassName={link.iconClassName}\n        href={link.url}\n      >\n        {labeled ? link.label : \"\"}\n      </Button>\n    ));\n  }\n  render() {\n    const { userLinks } = this.props.config;\n    if (!userLinks) {\n      return null;\n    }\n    return <div className=\"user-links\">{this.getLinkElements()}</div>;\n  }\n}\n\nexport default UserLinks;\n","import React, { Component } from \"react\";\nimport UserLinks from \"../UserLinks\";\nimport \"./ToolbarActions.scss\";\n\nclass Toolbar extends Component {\n  render() {\n    const { config } = this.props;\n    return (\n      <div className=\"toolbar-actions\">\n        <div className=\"userlinks-container\">\n          <UserLinks config={config} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Toolbar;\n","import React, { Component } from 'react'\nimport config from '../../../data/SiteConfig'\nimport './Footer.scss'\n\nclass Footer extends Component {\n  render() {\n    const { copyright, fixedFooter } = config\n    if (!copyright) {\n      return null\n    }\n    return (\n      <footer className={fixedFooter ? 'footer footer-fixed' : 'footer'}>\n        <div className=\"notice-container\">\n          <span className=\"copyright\">\n            <h4>{copyright}</h4>\n          </span>\n          <br />\n          <span className=\"based-on\">\n            <h4>\n              Powered by\n              <a href=\"https://www.gatsbyjs.org/\"> Gatsby.js</a>\n            </h4>\n          </span>\n          {/* <div className=\"rss\">\n            <Link to={url}>\n              <Button flat secondary iconClassName=\"fa fa-rss\">\n                Subscribe\n              </Button>\n            </Link>\n          </div> */}\n        </div>\n      </footer>\n    )\n  }\n}\n\nexport default Footer\n","import React from 'react'\nimport FontIcon from 'react-md/lib/FontIcons'\nimport { Link } from 'gatsby'\n\nfunction GetNavList(config) {\n  const NavList = [\n    {\n      primaryText: 'Home',\n      leftIcon: <FontIcon>home</FontIcon>,\n      component: Link,\n      to: '/'\n    },\n    {\n      divider: true\n    }\n  ]\n\n  if (config.userLinks) {\n    config.userLinks.forEach(link => {\n      NavList.push({\n        primaryText: link.label,\n        leftIcon: <FontIcon forceSize iconClassName={link.iconClassName} />,\n        component: 'a',\n        href: link.url\n      })\n    })\n  }\n\n  NavList.push({ divider: true })\n  return NavList\n}\nexport default GetNavList\n","import React, { Component } from 'react'\nimport NavigationDrawer from 'react-md/lib/NavigationDrawers'\nimport { Link } from 'gatsby'\nimport ToolbarActions from '../ToolbarActions'\nimport Footer from '../Footer'\nimport GetNavList from './NavList'\nimport './Navigation.scss'\n\nclass Navigation extends Component {\n  render() {\n    const { children, config } = this.props\n    return (\n      <NavigationDrawer\n        drawerTitle={config.siteTitle}\n        toolbarTitle={(\n          <Link to=\"/\" className=\"nav-title\">\n            John`s Dev log\n          </Link>\n)}\n        contentClassName=\"main-content\"\n        navItems={GetNavList(config)}\n        mobileDrawerType={NavigationDrawer.DrawerTypes.TEMPORARY}\n        tabletDrawerType={NavigationDrawer.DrawerTypes.TEMPORARY}\n        desktopDrawerType={NavigationDrawer.DrawerTypes.TEMPORARY}\n        toolbarActions={<ToolbarActions config={config} />}\n      >\n        <div className=\"main-container\">{children}</div>\n        <Footer />\n      </NavigationDrawer>\n    )\n  }\n}\n\nexport default Navigation\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport 'font-awesome/scss/font-awesome.scss'\nimport Navigation from '../components/Navigation'\nimport config from '../../data/SiteConfig'\nimport './index.scss'\nimport './global.scss'\n\nexport default class MainLayout extends React.Component {\n  render() {\n    const { children, title } = this.props\n    return (\n      <Navigation config={config} LocalTitle={title}>\n        <div>\n          <Helmet>\n            <meta name=\"description\" content={config.siteDescription} />\n          </Helmet>\n          {children}\n        </div>\n      </Navigation>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Img from 'gatsby-image'\nimport path from 'path'\nimport './PostCover.scss'\n\nclass PostCover extends Component {\n  render() {\n    const { fileEdges, postNode, coverHeight, coverClassName } = this.props\n    const post = postNode.frontmatter ? postNode.frontmatter : postNode\n    const coverNodeList = fileEdges.filter(fileNode => {\n      if (fileNode.node.childImageSharp === null) return false\n\n      if (\n        fileNode.node.absolutePath.indexOf(\n          path.join('/static/assets/', post.cover)\n        ) !== -1\n      )\n        return true\n\n      return false\n    })\n\n    if (coverNodeList.length === 1) {\n      return (\n        <Img\n          fluid={coverNodeList[0].node.childImageSharp.fluid}\n          outerWrapperClassName={coverClassName}\n          style={{ height: coverHeight, width: '100%' }}\n        />\n      )\n    }\n\n    /* eslint no-undef: \"off\" */\n    const coverURL =\n      post.cover.substring(0, 1) === '/'\n        ? __PATH_PREFIX__ + post.cover\n        : post.cover\n    return (\n      <div\n        style={{\n          backgroundImage: `url(${coverURL})`,\n          height: `${coverHeight}px`\n        }}\n        className={coverClassName}\n      />\n    )\n  }\n}\n\nexport default PostCover\n","import React, { Component } from 'react'\nimport { StaticQuery, graphql } from 'gatsby'\nimport PostCover from './PostCoverComponent'\n\nclass queryWrapper extends Component {\n  render() {\n    const { postNode, coverHeight, coverClassName } = this.props\n    return (\n      <StaticQuery\n        query={graphql`\n          query CoverQuery {\n            allFile {\n              edges {\n                node {\n                  id\n                  absolutePath\n                  childImageSharp {\n                    id\n                    resolutions {\n                      base64\n                      tracedSVG\n                      aspectRatio\n                      width\n                      height\n                      src\n                      srcSet\n                      srcWebp\n                      srcSetWebp\n                      originalName\n                    }\n                    internal {\n                      contentDigest\n                      type\n                      owner\n                    }\n                    fluid(maxWidth: 4000) {\n                      ...GatsbyImageSharpFluid\n                      originalName\n                    }\n                  }\n                }\n              }\n            }\n          }\n        `}\n        render={data => (\n          <PostCover\n            fileEdges={data.allFile.edges}\n            postNode={postNode}\n            coverHeight={coverHeight}\n            coverClassName={coverClassName}\n          />\n        )}\n      />\n    )\n  }\n}\n\nexport default queryWrapper\n"],"sourceRoot":""}