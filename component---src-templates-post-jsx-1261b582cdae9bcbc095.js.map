{"version":3,"sources":["webpack:///./src/components/Disqus/index.jsx","webpack:///./src/components/PostInfo/index.jsx","webpack:///./src/components/SocialLinks/index.jsx","webpack:///./src/templates/post.jsx","webpack:///./src/components/SEO/index.jsx"],"names":["components_Disqus","Disqus","props","_this","_Component","call","this","state","toasts","notifyAboutComment","bind","assertThisInitialized_default","onSnackbarDismiss","slice","setState","push","text","render","_this$props","postNode","expanded","SiteConfig_default","a","disqusShortname","post","frontmatter","url","url_join_default","siteUrl","pathPrefix","fields","slug","react_default","createElement","Card_default","className","CardTitle_default","title","avatar","Avatars_default","icon","FontIcons_default","expander","CardText_default","expandable","main_default","shortname","identifier","category_id","onNewComment","Snackbars_default","onDismiss","react","components_PostInfo","iconClassName","moment_default","date","format","dateFormat","components_SocialLinks","postPath","mobile","iconSize","TwitterShareButton","TwitterIcon","round","size","GooglePlusShareButton","GooglePlusIcon","FacebookShareButton","quote","excerpt","FacebookIcon","post_PostTemplate","PostTemplate","_React$Component","handleResize","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","innerWidth","pageContext","data","location","postOverlapClass","markdownRemark","id","postDefaultCategoryID","coverHeight","layout","Helmet_default","rel","href","SEO","postSEO","PostCover","coverClassName","Cards_default","dangerouslySetInnerHTML","__html","html","PostTags","tags","Component","pageQuery","description","image","postURL","postMeta","cover","url_join__WEBPACK_IMPORTED_MODULE_4___default","_data_SiteConfig__WEBPACK_IMPORTED_MODULE_5___default","siteTitle","siteDescription","siteLogo","blogURL","schemaOrgJSONLD","@context","@type","name","alternateName","siteTitleAlt","itemListElement","position","item","@id","headline","split","react__WEBPACK_IMPORTED_MODULE_2___default","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","content","type","JSON","stringify","property","siteFBAppID","userTwitter","react__WEBPACK_IMPORTED_MODULE_2__","__webpack_exports__"],"mappings":"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","file":"component---src-templates-post-jsx-1261b582cdae9bcbc095.js","sourcesContent":["import React, { Component } from 'react'\nimport ReactDisqusComments from 'react-disqus-comments'\nimport urljoin from 'url-join'\nimport Card from 'react-md/lib/Cards/Card'\nimport CardTitle from 'react-md/lib/Cards/CardTitle'\nimport CardText from 'react-md/lib/Cards/CardText'\nimport Avatar from 'react-md/lib/Avatars'\nimport FontIcon from 'react-md/lib/FontIcons'\nimport Snackbar from 'react-md/lib/Snackbars'\nimport config from '../../../data/SiteConfig'\n\nclass Disqus extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      toasts: []\n    }\n    this.notifyAboutComment = this.notifyAboutComment.bind(this)\n    this.onSnackbarDismiss = this.onSnackbarDismiss.bind(this)\n  }\n\n  onSnackbarDismiss() {\n    const [, ...toasts] = this.state.toasts\n    this.setState({ toasts })\n  }\n\n  notifyAboutComment() {\n    const toasts = this.state.toasts.slice()\n    toasts.push({ text: 'New comment available!' })\n    this.setState({ toasts })\n  }\n\n  render() {\n    const { postNode, expanded } = this.props\n    if (!config.disqusShortname) {\n      return null\n    }\n    const post = postNode.frontmatter\n    const url = urljoin(config.siteUrl, config.pathPrefix, postNode.fields.slug)\n    return (\n      <Card className=\"md-grid md-cell md-cell--12\">\n        <CardTitle\n          title=\"Comments\"\n          avatar={<Avatar icon={<FontIcon>comment</FontIcon>} />}\n          expander={!expanded}\n        />\n        <CardText expandable={!expanded}>\n          <ReactDisqusComments\n            shortname={config.disqusShortname}\n            identifier={post.title}\n            title={post.title}\n            url={url}\n            category_id={post.category_id}\n            onNewComment={this.notifyAboutComment}\n          />\n        </CardText>\n        <Snackbar\n          toasts={this.state.toasts}\n          onDismiss={this.onSnackbarDismiss}\n        />\n      </Card>\n    )\n  }\n}\n\nexport default Disqus\n","import React, { Component } from 'react'\nimport FontIcon from 'react-md/lib/FontIcons'\nimport moment from 'moment'\nimport config from '../../../data/SiteConfig'\nimport './PostInfo.scss'\n\nclass PostInfo extends Component {\n  render() {\n    const { postNode } = this.props\n    return (\n      <div className=\"post-info\">\n        <div className=\"date\">\n          <FontIcon iconClassName=\"fa fa-calendar\" />\n          {moment(postNode.fields.date).format(config.dateFormat)}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default PostInfo\n","import React, { Component } from 'react'\nimport {\n  FacebookShareButton,\n  GooglePlusShareButton,\n  TwitterShareButton,\n  FacebookIcon,\n  TwitterIcon,\n  GooglePlusIcon\n} from 'react-share'\nimport urljoin from 'url-join'\nimport config from '../../../data/SiteConfig'\nimport './SocialLinks.scss'\n\nclass SocialLinks extends Component {\n  render() {\n    const { postNode, postPath, mobile } = this.props\n    const post = postNode.frontmatter\n    const url = urljoin(config.siteUrl, config.pathPrefix, postPath)\n    const iconSize = mobile ? 36 : 48\n\n    return (\n      <div className=\"social-links\">\n        <TwitterShareButton url={url} title={post.title}>\n          <TwitterIcon round size={iconSize} />\n        </TwitterShareButton>\n        <GooglePlusShareButton url={url}>\n          <GooglePlusIcon round size={iconSize} />\n        </GooglePlusShareButton>\n        <FacebookShareButton url={url} quote={postNode.excerpt}>\n          <FacebookIcon round size={iconSize} />\n        </FacebookShareButton>\n      </div>\n    )\n  }\n}\n\nexport default SocialLinks\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport Card from 'react-md/lib/Cards'\nimport CardText from 'react-md/lib/Cards/CardText'\nimport Layout from '../layout'\nimport Disqus from '../components/Disqus'\nimport PostTags from '../components/PostTags'\nimport PostCover from '../components/PostCover'\nimport PostInfo from '../components/PostInfo'\nimport SocialLinks from '../components/SocialLinks'\nimport SEO from '../components/SEO'\nimport config from '../../data/SiteConfig'\nimport './b16-tomorrow-dark.css'\nimport './post.scss'\n\nexport default class PostTemplate extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      mobile: true\n    }\n    this.handleResize = this.handleResize.bind(this)\n  }\n\n  componentDidMount() {\n    this.handleResize()\n    window.addEventListener('resize', this.handleResize)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.handleResize)\n  }\n\n  handleResize() {\n    if (window.innerWidth >= 640) {\n      this.setState({ mobile: false })\n    } else {\n      this.setState({ mobile: true })\n    }\n  }\n\n  render() {\n    const { pageContext, data, location } = this.props\n    const { mobile } = this.state\n    const { slug } = pageContext\n    const expanded = !mobile\n    const postOverlapClass = mobile ? 'post-overlap-mobile' : 'post-overlap'\n    const postNode = data.markdownRemark\n    const post = postNode.frontmatter\n    if (!post.id) {\n      post.id = slug\n    }\n    if (!post.category_id) {\n      post.category_id = config.postDefaultCategoryID\n    }\n\n    const coverHeight = mobile ? 180 : 350\n    return (\n      <Layout location={location}>\n        <div className=\"post-page md-grid md-grid--no-spacing\">\n          <Helmet>\n            <title>{post.title}</title>\n            <link rel=\"canonical\" href={`${config.siteUrl}${post.id}`} />\n          </Helmet>\n          <SEO postPath={slug} postNode={postNode} postSEO />\n          <PostCover\n            postNode={postNode}\n            coverHeight={coverHeight}\n            coverClassName=\"md-grid md-cell--9 post-cover\"\n          />\n          <div\n            className={`md-grid md-cell--9 post-page-contents mobile-fix ${postOverlapClass}`}\n          >\n            <Card className=\"md-grid md-cell md-cell--12 post detail-post-wrap\">\n              <CardText className=\"post-body\">\n                <h1 className=\"post-header\">{post.title}</h1>\n                <PostInfo postNode={postNode} />\n                <div dangerouslySetInnerHTML={{ __html: postNode.html }} />\n              </CardText>\n              <div className=\"post-meta\">\n                <PostTags tags={post.tags} />\n                <SocialLinks\n                  postPath={slug}\n                  postNode={postNode}\n                  mobile={mobile}\n                />\n              </div>\n            </Card>\n            <Disqus postNode={postNode} expanded={expanded} />\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      excerpt\n      frontmatter {\n        title\n        cover\n        date\n        category\n        tags\n      }\n      fields {\n        nextTitle\n        nextSlug\n        prevTitle\n        prevSlug\n        slug\n        date\n      }\n    }\n  }\n`\n","import React, { Component } from 'react'\nimport Helmet from 'react-helmet'\nimport urljoin from 'url-join'\nimport config from '../../../data/SiteConfig'\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props\n    let title\n    let description\n    let image\n    let postURL\n    if (postSEO) {\n      const postMeta = postNode.frontmatter\n      ;({ title } = postMeta)\n      description = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt\n      image = postMeta.cover\n      postURL = urljoin(config.siteUrl, config.pathPrefix, postPath)\n    } else {\n      title = config.siteTitle\n      description = config.siteDescription\n      image = config.siteLogo\n    }\n    image = urljoin(config.siteUrl, config.pathPrefix, image)\n    const blogURL = urljoin(config.siteUrl, config.pathPrefix)\n    const schemaOrgJSONLD = [\n      {\n        '@context': 'http://schema.org',\n        '@type': 'WebSite',\n        url: blogURL,\n        name: title,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : ''\n      }\n    ]\n    if (postSEO) {\n      schemaOrgJSONLD.push([\n        {\n          '@context': 'http://schema.org',\n          '@type': 'BreadcrumbList',\n          itemListElement: [\n            {\n              '@type': 'ListItem',\n              position: 1,\n              item: {\n                '@id': postURL,\n                name: title,\n                image\n              }\n            }\n          ]\n        },\n        {\n          '@context': 'http://schema.org',\n          '@type': 'BlogPosting',\n          url: blogURL,\n          name: title,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n          headline: title,\n          image: {\n            '@type': 'ImageObject',\n            url: image\n          },\n          description\n        }\n      ])\n    }\n    image = `https://john015.github.io/assets/${\n      image.split('https://john015.github.io/')[1]\n    }`\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={description} />\n        <meta name=\"image\" content={image} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={title} />\n        <meta property=\"og:description\" content={description} />\n        <meta property=\"og:image\" content={image} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : ''}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : ''}\n        />\n        <meta name=\"twitter:title\" content={title} />\n        <meta name=\"twitter:description\" content={description} />\n        <meta name=\"twitter:image\" content={image} />\n      </Helmet>\n    )\n  }\n}\n\nexport default SEO\n"],"sourceRoot":""}