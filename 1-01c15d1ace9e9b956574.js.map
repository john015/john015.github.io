{"version":3,"sources":["webpack:///./data/SiteConfig.js","webpack:///./src/components/PostTags/index.jsx","webpack:///./src/components/UserLinks/index.jsx","webpack:///./src/components/ToolbarActions/index.jsx","webpack:///./src/components/Footer/index.jsx","webpack:///./src/components/Navigation/NavList.jsx","webpack:///./src/components/Navigation/index.jsx","webpack:///./src/layout/index.jsx","webpack:///./src/components/PostCover/PostCoverComponent.jsx","webpack:///./src/components/PostCover/index.jsx"],"names":["config","siteTitle","siteTitleShort","siteTitleAlt","siteLogo","siteUrl","pathPrefix","fixedFooter","siteDescription","siteRss","siteFBAppID","siteGATrackingID","disqusShortname","postDefaultCategoryID","dateFromFormat","dateFormat","userName","userEmail","userLinks","label","url","iconClassName","copyright","replace","substr","slice","module","exports","PostTags","render","tags","this","props","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","className","map","tag","gatsby__WEBPACK_IMPORTED_MODULE_3__","key","style","textDecoration","to","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_1___default","react_md_lib_Chips__WEBPACK_IMPORTED_MODULE_4___default","react__WEBPACK_IMPORTED_MODULE_2__","__webpack_exports__","components_UserLinks","getLinkElements","labeled","link","react_default","Buttons_default","icon","flat","secondary","href","react","components_ToolbarActions","components_Footer","SiteConfig_default","Navigation_NavList","NavList","primaryText","leftIcon","FontIcons_default","component","gatsby_browser_entry","divider","forEach","push","forceSize","components_Navigation","_this$props","children","NavigationDrawers_default","drawerTitle","toolbarTitle","contentClassName","navItems","mobileDrawerType","DrawerTypes","TEMPORARY","tabletDrawerType","desktopDrawerType","toolbarActions","layout_MainLayout","title","LocalTitle","Helmet_default","name","content","Component","PostCoverComponent","fileEdges","postNode","coverHeight","coverClassName","post","frontmatter","coverNodeList","filter","fileNode","node","childImageSharp","absolutePath","indexOf","path_browserify_default","join","cover","length","gatsby_image_default","fluid","outerWrapperClassName","height","width","coverURL","substring","backgroundImage","PostCover_queryWrapper","query","data","allFile","edges","_590853412"],"mappings":"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","file":"1-01c15d1ace9e9b956574.js","sourcesContent":["const config = {\n  siteTitle: 'John`s Dev log', // Site title.\n  siteTitleShort: 'John`s Dev log', // Short site title for homescreen (PWA). Preferably should be under 12 characters to prevent truncation.\n  siteTitleAlt: 'My Dev log', // Alternative site title for SEO.\n  siteLogo: '', // Logo used for SEO and manifest.\n  siteUrl: 'https://john015.github.io', // Domain of your website without pathPrefix.\n  pathPrefix: '/', // Prefixes all links. For cases when deployed to example.github.io/gatsby-material-starter/.\n  fixedFooter: false, // Whether the footer component is fixed, i.e. always visible\n  siteDescription: '웹 기술에 대한 블로그 입니다.', // Website description used for RSS feeds/meta description tag.\n  siteRss: '/rss.xml', // Path to the RSS file.\n  siteFBAppID: '1825356251115265', // FB Application ID for using app insights\n  siteGATrackingID: 'UA-47311644-4', // Tracking code ID for google analytics.\n  disqusShortname: 'https-vagr9k-github-io-gatsby-material-starter', // Disqus shortname.\n  postDefaultCategoryID: 'Tech', // Default category for posts.\n  dateFromFormat: 'YYYY-MM-DD', // Date format used in the frontmatter.\n  dateFormat: 'YYYY-MM-DD', // Date format for display.\n  userName: 'john015', // Username to display in the author segment.\n  userEmail: 'lsw0150305@gmail.com', // Email used for RSS feed's author segment\n  // Links to social profiles/projects you want to display in the author segment/navigation bar.\n  userLinks: [\n    {\n      label: 'GitHub',\n      url: 'https://github.com/john015',\n      iconClassName: 'fa fa-github'\n    },\n    {\n      label: 'Email',\n      url: 'mailto:lsw0150305@gmail.com',\n      iconClassName: 'fa fa-envelope'\n    }\n  ],\n  copyright: 'All content copyright john015 © 2019 • All rights reserved.' // Copyright string for the footer of the website and RSS feed.\n}\n\n// Validate\n\n// Make sure pathPrefix is empty if not needed\nif (config.pathPrefix === '/') {\n  config.pathPrefix = ''\n} else {\n  // Make sure pathPrefix only contains the first forward slash\n  config.pathPrefix = `/${config.pathPrefix.replace(/^\\/|\\/$/g, '')}`\n}\n\n// Make sure siteUrl doesn't have an ending forward slash\nif (config.siteUrl.substr(-1) === '/')\n  config.siteUrl = config.siteUrl.slice(0, -1)\n\n// Make sure siteRss has a starting forward slash\nif (config.siteRss && config.siteRss[0] !== '/')\n  config.siteRss = `/${config.siteRss}`\n\nmodule.exports = config\n","import React, { Component } from 'react'\nimport _ from 'lodash'\nimport { Link } from 'gatsby'\nimport Chip from 'react-md/lib/Chips'\nimport './PostTags.scss'\n\nclass PostTags extends Component {\n  render() {\n    const { tags } = this.props\n    return (\n      <div className=\"post-tag-container\">\n        {tags &&\n          tags.map(tag => (\n            <Link\n              key={tag}\n              style={{ textDecoration: 'none' }}\n              to={`/tags/${_.kebabCase(tag)}`}\n            >\n              <Chip label={`#${tag}`} className=\"post-preview-tags\" />\n            </Link>\n          ))}\n      </div>\n    )\n  }\n}\n\nexport default PostTags\n","import React, { Component } from \"react\";\nimport Button from \"react-md/lib/Buttons\";\nimport \"./UserLinks.scss\";\n\nclass UserLinks extends Component {\n  getLinkElements() {\n    const { userLinks } = this.props.config;\n    const { labeled } = this.props;\n    return userLinks.map(link => (\n      <Button\n        icon={!labeled}\n        flat={labeled}\n        secondary\n        key={link.label}\n        iconClassName={link.iconClassName}\n        href={link.url}\n      >\n        {labeled ? link.label : \"\"}\n      </Button>\n    ));\n  }\n  render() {\n    const { userLinks } = this.props.config;\n    if (!userLinks) {\n      return null;\n    }\n    return <div className=\"user-links\">{this.getLinkElements()}</div>;\n  }\n}\n\nexport default UserLinks;\n","import React, { Component } from \"react\";\nimport UserLinks from \"../UserLinks\";\nimport \"./ToolbarActions.scss\";\n\nclass Toolbar extends Component {\n  render() {\n    const { config } = this.props;\n    return (\n      <div className=\"toolbar-actions\">\n        <div className=\"userlinks-container\">\n          <UserLinks config={config} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Toolbar;\n","import React, { Component } from 'react'\nimport config from '../../../data/SiteConfig'\nimport './Footer.scss'\n\nclass Footer extends Component {\n  render() {\n    const { copyright, fixedFooter } = config\n    if (!copyright) {\n      return null\n    }\n    return (\n      <footer className={fixedFooter ? 'footer footer-fixed' : 'footer'}>\n        <div className=\"notice-container\">\n          <span className=\"copyright\">\n            <h4>{copyright}</h4>\n          </span>\n          <br />\n          <span className=\"based-on\">\n            <h4>\n              Powered by\n              <a href=\"https://www.gatsbyjs.org/\"> Gatsby.js</a>\n            </h4>\n          </span>\n          {/* <div className=\"rss\">\n            <Link to={url}>\n              <Button flat secondary iconClassName=\"fa fa-rss\">\n                Subscribe\n              </Button>\n            </Link>\n          </div> */}\n        </div>\n      </footer>\n    )\n  }\n}\n\nexport default Footer\n","import React from 'react'\nimport FontIcon from 'react-md/lib/FontIcons'\nimport { Link } from 'gatsby'\n\nfunction GetNavList(config) {\n  const NavList = [\n    {\n      primaryText: 'Home',\n      leftIcon: <FontIcon>home</FontIcon>,\n      component: Link,\n      to: '/'\n    },\n    {\n      divider: true\n    }\n  ]\n\n  if (config.userLinks) {\n    config.userLinks.forEach(link => {\n      NavList.push({\n        primaryText: link.label,\n        leftIcon: <FontIcon forceSize iconClassName={link.iconClassName} />,\n        component: 'a',\n        href: link.url\n      })\n    })\n  }\n\n  NavList.push({ divider: true })\n  return NavList\n}\nexport default GetNavList\n","import React, { Component } from 'react'\nimport NavigationDrawer from 'react-md/lib/NavigationDrawers'\nimport { Link } from 'gatsby'\nimport ToolbarActions from '../ToolbarActions'\nimport Footer from '../Footer'\nimport GetNavList from './NavList'\nimport './Navigation.scss'\n\nclass Navigation extends Component {\n  render() {\n    const { children, config } = this.props\n    return (\n      <NavigationDrawer\n        drawerTitle={config.siteTitle}\n        toolbarTitle={(\n          <Link to=\"/\" className=\"nav-title\">\n            John`s Dev log\n          </Link>\n)}\n        contentClassName=\"main-content\"\n        navItems={GetNavList(config)}\n        mobileDrawerType={NavigationDrawer.DrawerTypes.TEMPORARY}\n        tabletDrawerType={NavigationDrawer.DrawerTypes.TEMPORARY}\n        desktopDrawerType={NavigationDrawer.DrawerTypes.TEMPORARY}\n        toolbarActions={<ToolbarActions config={config} />}\n      >\n        <div className=\"main-container\">{children}</div>\n        <Footer />\n      </NavigationDrawer>\n    )\n  }\n}\n\nexport default Navigation\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport 'font-awesome/scss/font-awesome.scss'\nimport Navigation from '../components/Navigation'\nimport config from '../../data/SiteConfig'\nimport './index.scss'\nimport './global.scss'\n\nexport default class MainLayout extends React.Component {\n  render() {\n    const { children, title } = this.props\n    return (\n      <Navigation config={config} LocalTitle={title}>\n        <div>\n          <Helmet>\n            <meta name=\"description\" content={config.siteDescription} />\n          </Helmet>\n          {children}\n        </div>\n      </Navigation>\n    )\n  }\n}\n","import React, { Component } from \"react\";\nimport Img from \"gatsby-image\";\nimport path from \"path\";\nimport \"./PostCover.scss\";\n\nclass PostCover extends Component {\n  render() {\n    const { fileEdges, postNode, coverHeight, coverClassName } = this.props;\n    const post = postNode.frontmatter ? postNode.frontmatter : postNode;\n    const coverNodeList = fileEdges.filter(fileNode => {\n      if (fileNode.node.childImageSharp === null) return false;\n\n      if (\n        fileNode.node.absolutePath.indexOf(\n          path.join(\"/static/assets/\", post.cover)\n        ) !== -1\n      )\n        return true;\n\n      return false;\n    });\n\n    if (coverNodeList.length === 1) {\n      return (\n        <Img\n          fluid={coverNodeList[0].node.childImageSharp.fluid}\n          outerWrapperClassName={coverClassName}\n          style={{ height: coverHeight, width: \"100%\" }}\n        />\n      );\n    }\n\n    /* eslint no-undef: \"off\" */\n    const coverURL =\n      post.cover.substring(0, 1) === \"/\"\n        ? __PATH_PREFIX__ + post.cover\n        : post.cover;\n    return (\n      <div\n        style={{\n          backgroundImage: `url(${coverURL})`,\n          height: `${coverHeight}px`\n        }}\n        className={coverClassName}\n      />\n    );\n  }\n}\n\nexport default PostCover;\n","import React, { Component } from \"react\";\nimport { StaticQuery, graphql } from \"gatsby\";\nimport PostCover from \"./PostCoverComponent\";\n\nclass queryWrapper extends Component {\n  render() {\n    const { postNode, coverHeight, coverClassName } = this.props;\n    return (\n      <StaticQuery\n        query={graphql`\n          query CoverQuery {\n            allFile {\n              edges {\n                node {\n                  id\n                  absolutePath\n                  childImageSharp {\n                    id\n                    resolutions {\n                      base64\n                      tracedSVG\n                      aspectRatio\n                      width\n                      height\n                      src\n                      srcSet\n                      srcWebp\n                      srcSetWebp\n                      originalName\n                    }\n                    internal {\n                      contentDigest\n                      type\n                      owner\n                    }\n                    fluid(maxWidth: 1240) {\n                      ...GatsbyImageSharpFluid\n                      originalName\n                    }\n                  }\n                }\n              }\n            }\n          }\n        `}\n        render={data => (\n          <PostCover\n            fileEdges={data.allFile.edges}\n            postNode={postNode}\n            coverHeight={coverHeight}\n            coverClassName={coverClassName}\n          />\n        )}\n      />\n    );\n  }\n}\n\nexport default queryWrapper;\n"],"sourceRoot":""}